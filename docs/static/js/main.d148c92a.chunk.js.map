{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/Spinner.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","value","onChange","target","placeholder","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","src","alt","Spinner","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","console","log","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"0NAIaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAgB7C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAKd,yBAAKO,UAAU,gBACX,2BACIC,KAAK,OACLC,MAAOV,EACPW,SAlBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,QAkBXG,YAAY,sD,uBC3BnBC,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,4DACH,mCACF,EAFK,SAIAC,MAAM,0CAAD,OAA2CC,UAAUH,GAArD,kBAFV,EAEU,oBAHR,qCADG,cAIbI,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAXtB,kBAcZL,GAdY,4CAAH,sDCEPQ,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEhC,OACI,yBAAKnB,UAAU,QACX,yBAAKA,UAAU,YACX,yBAAKuB,IAAKJ,EAAKK,IAAKN,KAExB,2BAAIA,KCNHO,G,MAAU,WACnB,OACI,yBAAKzB,UAAU,YACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,oBCNd0B,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EACdhB,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAf,GAAG,OACLa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAItB,IAIIC,EDfiBI,CAAazB,GAA9BM,EAF4B,EAE5BA,KAAMc,EAFsB,EAEtBA,QAKb,OAHAM,QAAQC,IAAIrB,GACZoB,QAAQC,IAAIP,GAGR,oCACI,wBAAI3B,UAAU,cAAcO,GAC3BoB,GAAW,kBAAC,EAAD,MACZ,yBAAK3B,UAAU,aAEPa,EAAKE,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IAELD,UEIjBoB,EAtBM,WAAK,IAAD,EACe7C,mBAAS,CAAC,SADzB,mBACdQ,EADc,KACFT,EADE,KAGrB,OACI,oCACI,wBAAIU,UAAU,SAAd,wBACA,kBAAC,EAAD,CACIV,cAAeA,IAGlBS,EAAWgB,KAAI,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACI4B,IAAK5B,EACLA,SAAUA,S,MCX9B8B,IAASC,OACL,oCACE,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.d148c92a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{                                            \r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        // Validando que el inputValue reciba mÃ¡s de dos caracteres\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setinputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form_control\">\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange } \r\n                    placeholder=\"Escribe el nombre del gif que desees buscar ..\"   \r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n    const api_key = 'Z33vHvisIfwU7cQnRFcfPLxeswnZRun1';\r\n    const limit = 9;\r\n\r\n    const resp = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${api_key}`);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card_img\">\r\n                <img src={url} alt={title}/>\r\n            </div>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from '../components/GifGridItem'\r\nimport { Spinner } from './Spinner';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    console.log(data);\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"grid_title\">{category}</h2>\r\n            {loading && <Spinner /> }\r\n            <div className=\"card_grid\">\r\n                {\r\n                    data.map(img =>( \r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            // Enviando las propiedades de img \r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then(img =>(\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                })\r\n            ))\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n    const [categories, setCategories] = useState(['Cats'])\r\n    \r\n    return(\r\n        <>\r\n            <h1 className=\"title\">Buscando GIF - GIPHY</h1>\r\n            <AddCategory \r\n                setCategories={setCategories}\r\n            />\r\n\r\n            {categories.map(category=>(\r\n                <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                />\r\n                ) \r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './GifExpertApp.css';\n\n\nReactDOM.render(\n    <>\n      <GifExpertApp />\n    </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}